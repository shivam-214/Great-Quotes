{"version":3,"sources":["components/UI/LoadingSpinner.js","components/layout/MainNavigation.module.css","hooks/use-http.js","lib/api.js","components/comments/NewCommentForm.module.css","components/layout/Layout.module.css","components/UI/LoadingSpinner.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/layout/MainNavigation.js","components/layout/Layout.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","App.js","index.js"],"names":["LoadingSpinner","className","classes","spinner","module","exports","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","MainNavigation","header","logo","nav","to","isActive","active","Layout","props","main","children","NewCommentForm","commentTextRef","useRef","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","text","form","onSubmit","control","htmlFor","rows","ref","actions","CommentItem","item","CommentsList","comments","map","comment","Comments","useState","isAddingComment","setIsAddingComment","useParams","loadedComments","addedCommentHandler","length","onClick","NewQuote","lazy","AllQuotes","QuoteDetail","NotFound","App","location","useLocation","console","log","routes","useRoutes","path","element","replace","fallback","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.142ba221.chunk.js","sourcesContent":["import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__1omWY\",\"logo\":\"MainNavigation_logo__gQX76\",\"nav\":\"MainNavigation_nav__3npo2\",\"active\":\"MainNavigation_active__V69Q-\"};","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = \"https://react-deploy1-default-rtdb.firebaseio.com/\";\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quotes.\");\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quote.\");\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: \"POST\",\n    body: JSON.stringify(quoteData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not create quote.\");\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(\n    `${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`,\n    {\n      method: \"POST\",\n      body: JSON.stringify(requestData.commentData),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not add comment.\");\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not get comments.\");\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__3ld0V\",\"loading\":\"NewCommentForm_loading__3M8kh\",\"control\":\"NewCommentForm_control__r2yMr\",\"actions\":\"NewCommentForm_actions__1vuyW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__M4dIG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__29mW-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__3-0xT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__1cc7m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__3UoOS\"};","import React from \"react\";\r\nimport classes from \"./MainNavigation.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default function MainNavigation() {\r\n  return (\r\n    <header className={classes.header}>\r\n      <div className={classes.logo}>Great Quotes</div>\r\n      <nav className={classes.nav}>\r\n        <ul>\r\n          <li>\r\n            <NavLink\r\n              to=\"quotes\"\r\n              className={({ isActive }) =>\r\n                isActive ? `${classes.active}` : \"\"\r\n              }\r\n            >\r\n              All Quotes\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              to=\"new-quote\"\r\n              className={({ isActive }) =>\r\n                isActive ? `${classes.active}` : \" \"\r\n              }\r\n            >\r\n              Add a Quote\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport classes from \"./Layout.module.css\";\r\nimport MainNavigation from \"./MainNavigation\";\r\n\r\nexport default function Layout(props) {\r\n  return (\r\n    <>\r\n      <MainNavigation />\r\n      <main className={classes.main}>{props.children}</main>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useRef } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddedComment();\n    }\n  }, [status, error,onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useCallback, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport CommentsList from \"./CommentsList\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const { quoteId } = useParams();\n\n  const {\n    sendRequest,\n    status,\n    data: loadedComments,\n    error,\n  } = useHttp(getAllComments);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest,quoteId]);\n\n  let comments;\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"error\") {\n    comments = <p className=\"centered\">{error}</p>;\n  }\n\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className=\"centered\">No comments added yet!</p>;\n  }\n\n  if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import { lazy, Suspense } from \"react\";\nimport Layout from \"./components/layout/Layout\";\nimport Comments from \"./components/comments/Comments\";\nimport { Navigate, Link, useRoutes, useLocation } from \"react-router-dom\";\nimport LoadingSpinner from \"./components/UI/LoadingSpinner\";\n// import { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nconst NewQuote = lazy(() => import(\"./pages/NewQuote\"));\nconst AllQuotes = lazy(() => import(\"./pages/AllQuotes\"));\nconst QuoteDetail = lazy(() => import(\"./pages/QuoteDetail\"));\nconst NotFound = lazy(() => import(\"./pages/NotFound\"));\n\nfunction App() {\n  const location = useLocation();\n  console.log(location);\n\n  let routes = useRoutes([\n    { path: \"/\", element: <Navigate replace to=\"quotes\" /> },\n    { path: \"quotes\", element: <AllQuotes /> },\n    {\n      path: \"quotes/:quoteId/*\",\n      element: <QuoteDetail />,\n      children: [\n        {\n          path: \"\",\n          element: (\n            <div className=\"centered\">\n              <Link className=\"btn--flat\" to=\"comments\">\n                Load Comments\n              </Link>\n            </div>\n          ),\n        },\n        {\n          path: \"comments\",\n          element: <Comments />,\n        },\n      ],\n    },\n    { path: \"new-quote\", element: <NewQuote /> },\n    { path: \"*\", element: <NotFound /> },\n  ]);\n\n  return (\n    <Layout>\n      <Suspense\n        fallback={\n          <div className=\"centered\">\n            <LoadingSpinner />\n          </div>\n        }\n      >\n        {/* <TransitionGroup>\n          <CSSTransition key={location.key} classNames=\"next\" timeout={300}> */}\n            {routes}\n          {/* </CSSTransition>\n        </TransitionGroup> */}\n      </Suspense>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}